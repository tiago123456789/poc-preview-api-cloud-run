name: Deploy preview environment

on:
  pull_request:
    types: [opened, reopened]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code of app
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        run: |
          curl https://sdk.cloud.google.com | bash
          source $HOME/google-cloud-sdk/path.bash.inc
          gcloud --version  # Verify installation

      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode | jq > ./gcp_credential.json 
          cat gcp_credential.json > ./gcp.json
          gcloud auth activate-service-account --key-file=./gcp_credential.json 
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud auth list  # Verify authentication

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        run: |
          gcloud auth login --brief --cred-file=./gcp_credential.json
          gcloud auth configure-docker us-east4-docker.pkg.dev
          docker build -t us-east4-docker.pkg.dev/poc-preview-api/poc-preview-app/poc-preview-app:$GITHUB_SHA .
          docker push  us-east4-docker.pkg.dev/poc-preview-api/poc-preview-app/poc-preview-app:$GITHUB_SHA

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.1"

      - name: Check version terraform
        run: terraform -v

      - name: Deploy preview on cloud run service
        run: |
          cd infra/
          terraform init
          terraform workspace new $GITHUB_SHA
          terraform apply -auto-approve \
          -var docker_image=us-east4-docker.pkg.dev/poc-preview-api/poc-preview-app/poc-preview-app:$GITHUB_SHA \
          -var env=dev  -var hash=$(date +%s)
          echo URL_PREVIEW=$(terraform output cloud_run_url) >> $GITHUB_ENV

      - name: Add comment to PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Link preview: ${{ env.URL_PREVIEW }} \n ðŸ‘‹ Bye!"
            })
